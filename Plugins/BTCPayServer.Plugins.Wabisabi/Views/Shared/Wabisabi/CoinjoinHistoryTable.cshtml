@using BTCPayServer
@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Payments
@using BTCPayServer.Plugins.Wabisabi
@using NBitcoin
@using WalletWasabi.Blockchain.Analysis
@model List<BTCPayServer.Plugins.Wabisabi.BTCPayWallet.CoinjoinData>
@inject BTCPayNetworkProvider BtcPayNetworkProvider
@{
    var network = BtcPayNetworkProvider.BTC;
    var mainnet = BtcPayNetworkProvider.NetworkType == ChainName.Mainnet;
}

@functions
{
    void PrintCoin(BTCPayWallet.CoinjoinData.CoinjoinDataCoin coin)
    {
        var op = OutPoint.Parse(coin.Outpoint);
        <tr>
            <td>
                <a href="@PaymentTypes.BTCLike.GetTransactionLink(BtcPayNetworkProvider.BTC, op.Hash.ToString())" target="_blank" class="text-break">
                    @coin.Outpoint
                </a>

            </td>
            <td>
                @coin.Amount
            </td>
            <td>
                @if (string.IsNullOrEmpty(coin.PayoutId))
                {
                    @coin.AnonymitySet.ToString("0.##")
                }
                else
                {
                    @($"Payment ({coin.PayoutId})")
                }
            </td>
        </tr>
    }
}

<div class="table-responsive">
    <table class="table table-hover  w-100">
        <thead>
        <tr>
            <th class="w-125px">Round</th>
            <th class="w-125px">Timestamp</th>
            <th class="w-125px">Coordinator</th>
            <th class="w-125px">Transaction</th>
            <th class="text-nowrap">In</th>
            <th class="text-nowrap">Out</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var cjData in Model)
        {
            var cjInWeightedAverage = @CoinjoinAnalyzer.WeightedAverage.Invoke(@cjData.CoinsIn.Select(coin => new CoinjoinAnalyzer.AmountWithAnonymity(coin.AnonymitySet, new Money(coin.Amount, MoneyUnit.BTC))));
            var cjOutWeightedAverage = @CoinjoinAnalyzer.WeightedAverage.Invoke(@cjData.CoinsOut.Select(coin => new CoinjoinAnalyzer.AmountWithAnonymity(coin.AnonymitySet, new Money(coin.Amount, MoneyUnit.BTC))));
            <tr>
                <td>
                    <a class="text-break" data-bs-toggle="collapse" data-bs-target="#txcoins-@cjData.Round">@cjData.Round</a>
                </td>
                <td>
                    <span class="text-break">@cjData.Timestamp.ToTimeAgo()</span>
                </td>
                <td>
                    <span class="text-break">@cjData.CoordinatorName</span>
                </td>
                <td>
                    <a href="@PaymentTypes.BTCLike.GetTransactionLink(network, cjData.Transaction)" target="_blank" class="text-break">
                        @cjData.Transaction
                    </a>
                </td>
                <td>
                    <span class="">@cjData.CoinsIn.Length (@cjData.CoinsIn.Sum(coin => coin.Amount) BTC) (@cjInWeightedAverage.ToString("0.##") anonset wavg)</span>
                </td>
                <td>
                    <span class="">@cjData.CoinsOut.Length (@cjData.CoinsOut.Sum(coin => coin.Amount) BTC) (@cjOutWeightedAverage.ToString("0.##") anonset wavg)</span>
                </td>

            </tr>

            <tr id="txcoins-@cjData.Round" class="collapse">
                <td colspan="6">
                    <table class="table mb-0">

                        <thead>
                        <tr>
                            <th colspan="3">Inputs</th>
                        </tr>
                        <tr>
                            <th class="w-125px">utxo</th>
                            <th >Amount</th>
                            <th >Anonset</th>
                        </tr>
                        </thead>
                        @foreach (var c in cjData.CoinsIn)
                        {
                            PrintCoin(c);
                        }


                    </table>
                    <table class="table mb-0">

                        <thead>
                        <tr>
                            <th colspan="3">Outputs</th>
                        </tr>
                        <tr>
                            <th class="w-125px">utxo</th>
                            <th >Amount</th>
                            <th >Anonset</th>
                        </tr>
                        </thead>
                        @foreach (var c in cjData.CoinsOut)
                        {
                            PrintCoin(c);
                        }


                    </table>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>